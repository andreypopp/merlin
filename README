Installing Merlin
=================

Compilation
-----------

Needed: OCaml 4, ocamlfind, ocamlbuild, yojson, menhir

Merlin requires OCaml >=4.00.1 (may work with newer versions, but it is tightly
bound to compiler internals).
Then ensures that "yojson" and "menhir" are installed and are registered in ocamlfind.

  $ make


Installation
------------

If you don't get any error in above step:

  $ make install 

Setting-up vim
==============

First, makes sure that ocamlmerlin binary can be found in PATH.
Then take a look at ./vim/ subdirectory:

  autoload/
    merlin.vim   -- main vim script
    merlin.py    -- helper script needed by merlin.vim
                    (has to be in the same directory)
  syntax\_checkers/ -- integration with syntastic  


Emacs interface
===============

merlin comes with an emacs interface (file: emacs/merlin.el) that implements a
minor-mode that is supposed to be used on top of tuareg-mode.

To install it, just M-x load-file /wherever/merlin.el. To use it, you will need

- json.el (available by package.el)
- auto-complete-mode (morally optional, available by package.el)

Once it is done, to enable merlin in a buffer, just type M-x merlin-mode. It
will spawn an instance of ocamlmerlin in a separate buffer.

merlin implements a locked zone like proofgeneral to know what merlin knows of
the buffer. To advance or retract the locked zone to the point, use C-c C-RET.
Note that retraction can go before the point in case the point is not at the end
of the last definition.

You can use C-c C-t to show the type of the identifier under the point. If it is
a module, its signature will be displayed in another buffer.  With a prefix
argument (eg. C-u C-c C-t) it will give the type of the region.

C-c l allows you to load a findlib package inside merlin. For a project, you should use a .merlin file.

C-c C-r retracts the whole buffer.

Moreover, you have autocompletion with merlin (and for now only with merlin),
and whenever you stay idle for one second you get the type of the ident under
the point (modules are not displayed), pretty much like haskell-mode.

 How-to use ==========

TODO
